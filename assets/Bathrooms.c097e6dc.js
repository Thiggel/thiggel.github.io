import{k as B,u as C,l as k,r as x,o as u,m as p,a as e,d as y,w as t,F as V,e as a,O as j,n as m,ae as z,p as F,q as s,c as S}from"./vendor.69980f57.js";import{V as T}from"./VFooter.fa563c55.js";import{V as N}from"./VLabel.5cc3e278.js";import{V as c,a as d}from"./VBtn.160188da.js";import{V as U}from"./VTextField.bacdadd3.js";import{V as I}from"./VSwitch.06da12bd.js";import"./VSelectionControl.f87febb1.js";const $={class:"progress-bar"},q=a("h4",null," How many bathrooms do you have? ",-1),D=a("p",{class:"mb-10"},[s(" Same story here: measure the "),a("b",null,"width"),s(" and "),a("b",null,"length"),s(" of your bathroom(s) and type in their product ("),a("i",null,"width \xD7 length"),s(") as the size. This time, we need to know whether there is a toilet within the bathroom so that we can reliably calculate your maximum rent. ")],-1),L=s(" mdi-close "),E=s(" mdi-plus "),H=s("mdi-arrow-left"),K=a("span",null,"Previous",-1),O=a("span",null,"Next",-1),P=s("mdi-arrow-right"),X=B({props:{progress:Number},setup(v){const n=C(),w=k(()=>n.state.bathrooms);function b(){n.commit("addBathroom")}function g(r){n.commit("removeBathroom",r)}function h(r,_){n.commit("setBathroom",{index:r,bathroom:_})}return(r,_)=>{const f=x("router-link");return u(),p(V,null,[e(y,null,{default:t(()=>[a("div",$,[a("div",{class:"progress",style:j("width:"+v.progress+"%")},null,4)]),e(m,{class:"ma-4 mb-10",justify:"center"},{default:t(()=>[q]),_:1}),e(N,null,{default:t(()=>[D,(u(!0),p(V,null,z(F(w),(o,i)=>(u(),S(m,{key:i,class:"form-list-item"},{default:t(()=>[e(U,{"prepend-inner-icon":"mdi-ruler",label:"size (in m\xB2)",required:"",class:"pa-4",modelValue:o.size,"onUpdate:modelValue":l=>o.size=l,onInput:l=>h(i,o),type:"number"},null,8,["modelValue","onUpdate:modelValue","onInput"]),e(I,{label:"Does it have a toilet?",color:"green",class:"pa-4",modelValue:o.containsToilet,"onUpdate:modelValue":l=>o.containsToilet=l,onChange:l=>h(i,o)},null,8,["modelValue","onUpdate:modelValue","onChange"]),e(c,{onClick:l=>g(i),class:"ma-4",icon:""},{default:t(()=>[e(d,{dark:""},{default:t(()=>[L]),_:1})]),_:2},1032,["onClick"])]),_:2},1024))),128)),e(m,{justify:"center"},{default:t(()=>[e(c,{class:"mx-2",icon:"",size:"large",elevation:"3",onClick:b},{default:t(()=>[e(d,null,{default:t(()=>[E]),_:1})]),_:1})]),_:1})]),_:1})]),_:1}),e(T,{class:"d-flex align-center justify-space-between pa-8"},{default:t(()=>[e(f,{to:{name:"Bedrooms"},custom:""},{default:t(({navigate:o})=>[e(c,{class:"ma-2 secondary",elevation:"1",size:"large",variant:"outlined",onClick:o},{default:t(()=>[e(d,null,{default:t(()=>[H]),_:1}),K]),_:2},1032,["onClick"])]),_:1}),e(f,{to:{name:"Kitchen"},custom:""},{default:t(({navigate:o})=>[e(c,{class:"ma-2 success",elevation:"4",size:"large",variant:"outlined",onClick:o},{default:t(()=>[O,e(d,null,{default:t(()=>[P]),_:1})]),_:2},1032,["onClick"])]),_:1})]),_:1})],64)}}});export{X as default};
